{"ast":null,"code":"import _objectSpread from \"/home/bruno/Bureau/sandra/projet-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//client/src/reducers.js \nimport { combineReducers } from 'redux';\nimport { CHANGE_NOM, CHANGE_PRENOM, CHANGE_AGE, CHANGE_CLASSE, INITIALIZE_FORM } from '../Action';\nvar initialState = {\n  form: {\n    nom: '',\n    prenom: '',\n    age: '',\n    classe: ''\n  },\n  characters: {\n    isFetching: false,\n    characterArray: []\n  }\n};\n\nvar formReducer = function formReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.form;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_NOM:\n      return _objectSpread({}, state, {\n        nom: action.nom\n      });\n\n    case CHANGE_PRENOM:\n      return _objectSpread({}, state, {\n        prenom: action.prenom\n      });\n\n    case CHANGE_AGE:\n      return _objectSpread({}, state, {\n        age: action.age\n      });\n\n    case CHANGE_CLASSE:\n      return _objectSpread({}, state, {\n        classe: action.classe\n      });\n\n    case INITIALIZE_FORM:\n      return initialState.form;\n\n    default:\n      return state;\n  }\n};\n\nvar charactersReducer = function charactersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.characters;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  form: formReducer,\n  characters: charactersReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/bruno/Bureau/sandra/projet-front/src/reducers/reducers.js"],"names":["combineReducers","CHANGE_NOM","CHANGE_PRENOM","CHANGE_AGE","CHANGE_CLASSE","INITIALIZE_FORM","initialState","form","nom","prenom","age","classe","characters","isFetching","characterArray","formReducer","state","action","type","charactersReducer","rootReducer"],"mappings":";AACA;AACA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,EAAgDC,aAAhD,EAA+DC,eAA/D,QAAsF,WAAtF;AAGA,IAAMC,YAAY,GAAG;AAEnBC,EAAAA,IAAI,EAAE;AAEJC,IAAAA,GAAG,EAAE,EAFD;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,GAAG,EAAE,EAJD;AAKJC,IAAAA,MAAM,EAAE;AALJ,GAFa;AAWnBC,EAAAA,UAAU,EAAE;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AAXO,CAArB;;AAuBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BV,YAAY,CAACC,IAAiB;AAAA,MAAXU,MAAW;;AAEzD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKjB,UAAL;AAEE,+BAEKe,KAFL;AAIER,QAAAA,GAAG,EAAES,MAAM,CAACT;AAJd;;AAQF,SAAKN,aAAL;AAEE,+BAEKc,KAFL;AAIEP,QAAAA,MAAM,EAAEQ,MAAM,CAACR;AAJjB;;AAOF,SAAKN,UAAL;AAEE,+BAEKa,KAFL;AAIEN,QAAAA,GAAG,EAAEO,MAAM,CAACP;AAJd;;AAOF,SAAKN,aAAL;AAEE,+BAEKY,KAFL;AAIEL,QAAAA,MAAM,EAAEM,MAAM,CAACN;AAJjB;;AAQF,SAAKN,eAAL;AAEE,aAAOC,YAAY,CAACC,IAApB;;AAEF;AAEE,aAAOS,KAAP;AA9CJ;AAkDD,CApDD;;AAwDA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAA6C;AAAA,MAA5CH,KAA4C,uEAApCV,YAAY,CAACM,UAAuB;AAAA,MAAXK,MAAW;;AAErE,UAAQA,MAAM,CAACC,IAAf;AAEE;AAEE,aAAOF,KAAP;AAJJ;AAQD,CAVD;;AAaA,IAAMI,WAAW,GAAGpB,eAAe,CAAC;AAElCO,EAAAA,IAAI,EAAEQ,WAF4B;AAIlCH,EAAAA,UAAU,EAAEO;AAJsB,CAAD,CAAnC;AAQA,eAAeC,WAAf","sourcesContent":["\n//client/src/reducers.js \nimport { combineReducers } from 'redux'\n\nimport { CHANGE_NOM, CHANGE_PRENOM, CHANGE_AGE, CHANGE_CLASSE, INITIALIZE_FORM } from '../Action'\n\n\nconst initialState = {\n\n  form: {\n\n    nom: '',\n    prenom: '',\n    age: '',\n    classe: ''\n\n  },\n\n  characters: {\n\n    isFetching: false,\n\n    characterArray: [],\n\n  },\n\n}\n\n\n\nconst formReducer = (state = initialState.form, action) => {\n\n  switch (action.type) {\n\n    case CHANGE_NOM:\n\n      return {\n\n        ...state,\n\n        nom: action.nom,\n\n      }\n\n    case CHANGE_PRENOM:\n\n      return {\n\n        ...state,\n\n        prenom: action.prenom,\n\n      }\n    case CHANGE_AGE:\n\n      return {\n\n        ...state,\n\n        age: action.age,\n\n      }\n    case CHANGE_CLASSE:\n\n      return {\n\n        ...state,\n\n        classe: action.classe,\n\n      }\n\n    case INITIALIZE_FORM:\n\n      return initialState.form\n\n    default:\n\n      return state\n\n  }\n\n}\n\n\n\nconst charactersReducer = (state = initialState.characters, action) => {\n\n  switch (action.type) {\n\n    default:\n\n      return state\n\n  }\n\n}\n\n\nconst rootReducer = combineReducers({\n\n  form: formReducer,\n\n  characters: charactersReducer,\n\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}