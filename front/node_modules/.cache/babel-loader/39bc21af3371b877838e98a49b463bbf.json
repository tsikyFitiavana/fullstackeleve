{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Bureau/sandra/projet-front/src/Components/CharacterList.js\";\n//client / src / components / CharacterList.js\nimport React from 'react';\nimport axios from 'axios';\nimport { requestData, receiveDataSuccess, receiveDataFailed } from '../actions';\n\nvar CharacterList = function CharacterList(_ref) {\n  var store = _ref.store;\n  var _store$getState$chara = store.getState().characters,\n      isFetching = _store$getState$chara.isFetching,\n      characterArray = _store$getState$chara.characterArray;\n\n  var handleFetchData = function handleFetchData() {\n    store.dispatch(requestData()); // axios.get()を呼ぶ前にisFetchingをtrueにしておく\n\n    axios.get('http://localhost:8070/eleve').then(function (response) {\n      // データ受け取りに成功した場合\n      var _characterArray = response.data;\n      store.dispatch(receiveDataSuccess(_characterArray)); // データをstoreに保存するとともにisFetchingをfalseに\n    }).catch(function (err) {\n      // データ受け取りに失敗した場合\n      console.error(new Error(err));\n      store.dispatch(receiveDataFailed()); // isFetchingをfalseに\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, isFetching // isFetchingの値で分岐\n  ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Now Loading...\") // データをFetch中ならばローディングアイコンを表示\n  : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleFetchData();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"fetch data\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, characterArray.map(function (character) {\n    return React.createElement(\"li\", {\n      key: character._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\".concat(character.nom, \" (\").concat(character.age, \")\"));\n  }))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["/home/bruno/Bureau/sandra/projet-front/src/Components/CharacterList.js"],"names":["React","axios","requestData","receiveDataSuccess","receiveDataFailed","CharacterList","store","getState","characters","isFetching","characterArray","handleFetchData","dispatch","get","then","response","_characterArray","data","catch","err","console","error","Error","map","character","_id","nom","age"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,iBAA1C,QAAmE,YAAnE;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAAA,8BACMA,KAAK,CAACC,QAAN,GAAiBC,UADvB;AAAA,MACzBC,UADyB,yBACzBA,UADyB;AAAA,MACbC,cADa,yBACbA,cADa;;AAGjC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BL,IAAAA,KAAK,CAACM,QAAN,CAAeV,WAAW,EAA1B,EAD0B,CACK;;AAC/BD,IAAAA,KAAK,CAACY,GAAN,CAAU,6BAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AAAG;AACjB,UAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAjC;AACAX,MAAAA,KAAK,CAACM,QAAN,CAAeT,kBAAkB,CAACa,eAAD,CAAjC,EAFc,CAEyC;AAC1D,KAJL,EAKKE,KALL,CAKW,UAAAC,GAAG,EAAI;AAAG;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAc,IAAIC,KAAJ,CAAUH,GAAV,CAAd;AACAb,MAAAA,KAAK,CAACM,QAAN,CAAeR,iBAAiB,EAAhC,EAFU,CAE2B;AACxC,KARL;AASH,GAXD;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,UAAU,CAAE;AAAF,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,CACqB;AADrB,IAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAME,eAAe,EAArB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,cAAc,CAACa,GAAf,CAAmB,UAAAC,SAAS;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,SAAS,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQD,SAAS,CAACE,GADlB,eAC0BF,SAAS,CAACG,GADpC,OADyB;AAAA,GAA5B,CADL,CAFF,CAJd,CADJ;AAkBH,CAlCD;;AAoCA,eAAetB,aAAf","sourcesContent":["//client / src / components / CharacterList.js\n\nimport React from 'react'\nimport axios from 'axios'\nimport { requestData, receiveDataSuccess, receiveDataFailed } from '../actions'\n\nconst CharacterList = ({ store }) => {\n    const { isFetching, characterArray } = store.getState().characters\n\n    const handleFetchData = () => {\n        store.dispatch(requestData())  // axios.get()を呼ぶ前にisFetchingをtrueにしておく\n        axios.get('http://localhost:8070/eleve')\n            .then(response => {  // データ受け取りに成功した場合\n                const _characterArray = response.data\n                store.dispatch(receiveDataSuccess(_characterArray))    // データをstoreに保存するとともにisFetchingをfalseに\n            })\n            .catch(err => {  // データ受け取りに失敗した場合\n                console.error(new Error(err))\n                store.dispatch(receiveDataFailed())  // isFetchingをfalseに\n            })\n    }\n\n    return (\n        <div>\n            {\n                isFetching  // isFetchingの値で分岐\n                    ? <h2>Now Loading...</h2>  // データをFetch中ならばローディングアイコンを表示\n                    : <div>\n                        <button onClick={() => handleFetchData()}>fetch data</button>\n                        <ul>\n                            {characterArray.map(character => (\n                                <li key={character._id}>\n                                    {`${character.nom} (${character.age})`}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default CharacterList\n\n"]},"metadata":{},"sourceType":"module"}